/*
 * Source code generated by uk.ac.leeds.ccg.data.fire.process.F_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.projects.fire.data.dwellings;

import uk.ac.leeds.ccg.projects.fire.core.F_Strings;
import uk.ac.leeds.ccg.projects.fire.data.F_Data;

public class F_Dwellings_Integer_Record1 extends F_Dwellings_Integer_Record0 {

    private static final long serialVersionUID = 1L;

    public Integer tOCCUPANCY_TYPE;
    public Integer tWERE_ACTIVE_SAFETY_SYSTEMS_PRESENT;
    public Integer tALARM_SYSTEM;
    public Integer tALARM_SYSTEM_TYPE;
    public Integer tALARM_REASON_FOR_POOR_OUTCOME;

    public F_Dwellings_Integer_Record1(F_Dwellings_String_Record1 r, F_Data d) throws Exception {
        super(r, d);
        tOCCUPANCY_TYPE = d.name2ids.get(d.vname2id.get(F_Strings.OCCUPANCY_TYPE)).get(r.tOCCUPANCY_TYPE);
        tOCCUPIED_NORMAL = d.name2ids.get(d.vname2id.get(F_Strings.OCCUPIED_NORMAL)).get(r.tOCCUPIED_NORMAL);
        tWERE_ACTIVE_SAFETY_SYSTEMS_PRESENT = d.name2ids.get(d.vname2id.get(F_Strings.WERE_ACTIVE_SAFETY_SYSTEMS_PRESENT)).get(r.tWERE_ACTIVE_SAFETY_SYSTEMS_PRESENT);
        tALARM_SYSTEM = d.name2ids.get(d.vname2id.get(F_Strings.ALARM_SYSTEM)).get(r.tALARM_SYSTEM);
        tALARM_SYSTEM_TYPE = d.name2ids.get(d.vname2id.get(F_Strings.ALARM_SYSTEM_TYPE)).get(r.tALARM_SYSTEM_TYPE);
        tALARM_REASON_FOR_POOR_OUTCOME = d.name2ids.get(d.vname2id.get(F_Strings.ALARM_REASON_FOR_POOR_OUTCOME)).get(r.tALARM_REASON_FOR_POOR_OUTCOME);
    }

    /**
     * @return A String representation of this.
     */
    @Override
    public String toString(F_Data data) {
        String r = toString0(data);
        r += ", OCCUPANCY_TYPE=" + getOCCUPANCY_TYPE(data);
        r += ", OCCUPIED_NORMAL=" + getOCCUPIED_NORMAL(data);
        r += ", WERE_ACTIVE_SAFETY_SYSTEMS_PRESENT=" + getWERE_ACTIVE_SAFETY_SYSTEMS_PRESENT(data);
        r += ", ALARM_SYSTEM=" + getALARM_SYSTEM(data);
        r += ", ALARM_SYSTEM_TYPE=" + getALARM_SYSTEM_TYPE(data);
        r += ", ALARM_REASON_FOR_POOR_OUTCOME=" + getALARM_REASON_FOR_POOR_OUTCOME(data);
        r += toString1(data);
        return r;
    }
    
    @Override
    public String toCSVString(F_Data data) {
        String r = toCSVString0(data);
        r += "\",\"" + getOCCUPANCY_TYPE(data);
        r += "\",\"" + getOCCUPIED_NORMAL(data);
        r += "\",\"" + getWERE_ACTIVE_SAFETY_SYSTEMS_PRESENT(data);
        r += "\",\"" + getALARM_SYSTEM(data);
        r += "\",\"" + getALARM_SYSTEM_TYPE(data);
        r += "\",\"" + getALARM_REASON_FOR_POOR_OUTCOME(data);
        r += toCSVString1(data);
        return r;
    }
    
    public String getOCCUPANCY_TYPE(F_Data data) {
        return data.id2names.get(data.vname2id.get(F_Strings.OCCUPANCY_TYPE)).get(tOCCUPANCY_TYPE);
    }

    public String getWERE_ACTIVE_SAFETY_SYSTEMS_PRESENT(F_Data data) {
        return data.id2names.get(data.vname2id.get(F_Strings.WERE_ACTIVE_SAFETY_SYSTEMS_PRESENT)).get(tWERE_ACTIVE_SAFETY_SYSTEMS_PRESENT);
    }

    public String getALARM_SYSTEM(F_Data data) {
        return data.id2names.get(data.vname2id.get(F_Strings.ALARM_SYSTEM)).get(tALARM_SYSTEM);
    }

    public String getALARM_SYSTEM_TYPE(F_Data data) {
        return data.id2names.get(data.vname2id.get(F_Strings.ALARM_SYSTEM_TYPE)).get(tALARM_SYSTEM_TYPE);
    }

    public String getALARM_REASON_FOR_POOR_OUTCOME(F_Data data) {
        return data.id2names.get(data.vname2id.get(F_Strings.ALARM_REASON_FOR_POOR_OUTCOME)).get(tALARM_REASON_FOR_POOR_OUTCOME);
    }
}
